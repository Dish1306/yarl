parameters:
  codecov.token: ''

stages:
- stage: test
  displayName: 'Run tests'

  jobs:
  - job:
    strategy:
      matrix:
        Py35-Cython-Linux:
          python.version: '3.5'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py36-Cython-Linux:
          python.version: '3.6'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py37-Cython-Linux:
          python.version: '3.7'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py38-Cython-Linux:
          python.version: '3.8'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py35-Pure-Linux:
          python.version: '3.5'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
        Py36-Pure-Linux:
          python.version: '3.6'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
        Py37-Pure-Linux:
          python.version: '3.7'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
        Py38-Pure-Linux:
          python.version: '3.8'
          no_extensions: 'Y'
          image: 'ubuntu-latest'
        PyPy3-Linux:
          python.version: 'pypy3'
          no_extensions: ''
          image: 'ubuntu-latest'
        Py35-Cython-Win:
          python.version: '3.5'
          no_extensions: ''
          image: 'vs2017-win2016'
        Py36-Cython-Win:
          python.version: '3.6'
          no_extensions: ''
          image: 'windows-latest'
        Py37-Cython-Win:
          python.version: '3.7'
          no_extensions: ''
          image: 'windows-latest'
        Py38-Cython-Win:
          python.version: '3.8'
          no_extensions: ''
          image: 'windows-latest'
        Py35-Cython-Mac:
          python.version: '3.5'
          no_extensions: ''
          image: 'macos-latest'
        Py36-Cython-Mac:
          python.version: '3.6'
          no_extensions: ''
          image: 'macos-latest'
        Py37-Cython-Mac:
          python.version: '3.7'
          no_extensions: ''
          image: 'macos-latest'
        Py38-Cython-Mac:
          python.version: '3.8'
          no_extensions: ''
          image: 'macos-latest'
    pool:
      vmImage: '$(image)'

    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: '$(python.version)'
        architecture: 'x64'

    - script: |
        python -m pip install --upgrade pip
      displayName: 'Update pip'
      
    - script: |
        make cythonize
      condition: eq(variables['no_extensions'], '')
      displayName: 'Cythonize'
    - script: |
        pip install -r requirements/test.txt
      displayName: 'Install dependencies'
      env:
        YARL_NO_EXTENSIONS: '$(no_extensions)'
    - script: |
        pytest tests -vv
        python -m coverage xml
      displayName: 'pytest'
    - script: |
        pip install codecov
        python -m codecov -f coverage.xml -X gcov
      displayName: 'Upload coverage reports'
      condition: ne(variables['codecov.token'], '')
      env:
        CODECOV_TOKEN: '$(codecov.token)'

  -job:
   strategy:
      matrix:
        Py36-C-Arm64-Linux:
          python.version: '3.6'
          image: 'ubuntu-latest'
        Py37-C-Arm64-Linux:
          python.version: '3.7'
          image: 'ubuntu-latest'
        Py38-C-Arm64-Linux:
          python.version: '3.8'
          image: 'ubuntu-latest'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self
      submodules: true
      clean: true

    - script: docker run --rm --privileged hypriot/qemu-register
      displayName: 'Registering qemu'
    - script: |
        set -xeo pipefail
        docker run -v $(pwd):"${DOCKER_YARL_ROOT}":rw,z \
                   -e HOST_USER_ID \
                   -e CODECOV_TOKEN \
                   "arm64v8/ubuntu:bionic" \
                   bash -c "cd $DOCKER_YARL_ROOT;
                   apt-get update -qq && apt-get install -qq make $PYTHON python3-pip lib$PYTHON-dev git && \
                   $PYTHON -m pip install --upgrade pip setuptools wheel pytest-azurepipelines && \
                   make cythonize && \
                   $PYTHON -m pip install -r requirements/test.txt && \
                   $PYTHON -m pytest tests -vv && \
                   $PYTHON -m coverage xml && \
                   if [ CODECOV_TOKEN != '' ]; then
                    $PYTHON -m pip install codecov && $PYTHON -m codecov -f coverage.xml -X gcov
                   fi;"
      displayName: 'Running AArch64 build'
      env:
        CODECOV_TOKEN: $(codecov.token)
        DOCKER_YARL_ROOT: "/home/yarl_root"
        HOST_USER_ID: $(id -u)
        PYTHON: "python$(python.version)"
   
